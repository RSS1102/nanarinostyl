---
import prefix from "src/scripts/prefix";
import Switch from "./switch/index.astro";
import { Icon } from "astro-icon";
import favicon from "src/assets/favicon.svg";

interface Props {
    href?: string;
}
const { href } = Astro.props;
---

<header class={`${prefix}-layout-header`}>
    <a href={href || import.meta.env.BASE_URL} class="logo">
        <img src={favicon} alt="logo" class="logo" />
    </a>
    <Switch id="header-theme-switch" class="header-theme-switch" title="theme" name="theme">
        <Icon name="general/outline/sun" alt="sun" />
        <Icon name="general/outline/moon" alt="moon" />
    </Switch>
</header>

<script src="/src/scripts/client/theme/check.ts"></script>

<style lang="stylus">
header
    display flex
    align-items center
    justify-content space-between
    height var(--line-height-8)
    padding .5em 1em
    a.logo
        display flex
        border-radius 50%
        img.logo
            width var(--font-size-8)
            height var(--font-size-8)
</style>

<style lang="stylus" is:global>
@import './../lib/variable/functions.styl'

.header-theme-switch
    // 打开阴影颜色
    --primary-6 var(--orangered-6)
    // 关闭阴影颜色
    --gray-4 var(--blue-6)
    // 阴影大小
    --box-shadow-width-switch 48px

#header-theme-switch+label
    // 打开按钮颜色 如果不覆盖 按钮和阴影同色
    --primary-6 var(--pinkpurple-6)
    // 关闭按钮颜色 如果不覆盖 按钮和阴影同色
    --gray-4 var(--gold-3)
    svg
        background unset
    svg[alt=sun]
        // 打开按钮字体颜色
        color _rgb(var(--orangered-10))
        // 打开按钮字体羽化
        filter drop-shadow(0 0 3px _rgb(var(--red-6)))
        opacity 1
    svg[alt=moon]
        opacity 0

#header-theme-switch:checked+label
    svg[alt=sun]
        opacity 0
    svg[alt=moon]
        // 关闭按钮字体颜色
        color _rgb(var(--blue-10))
        // 关闭按钮字体羽化
        filter drop-shadow(0 0 3px _rgb(var(--blue-6)))
        opacity 1
</style>
