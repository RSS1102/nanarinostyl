---
import prefix from "src/scripts/server/prefix";
import type { page, menu } from "src/scripts/server/menu";
interface Props {
    menu: Array<page | menu>;
    base?: string;
}
const { menu } = Astro.props;
const base = Astro.props.base ?? "";
const getName = (path: string) => path?.match?.(/[^/]*$/)?.[0];
---

<ul class={`${prefix}-menu`}>
    {
        menu.map((item) => {
            if (
                Array.isArray((item as menu).children) &&
                (item as menu).children.length > 0
            ) {
                return (
                    <li class={`${prefix}-menu-submenu`} style="order:1">
                        <div class={`${prefix}-menu-submenu-title`}>
                            {getName(item.path)}
                        </div>
                        <Astro.self
                            menu={(item as menu).children}
                            base={base}
                        />
                    </li>
                );
            }
            return (
                <li
                    class:list={[
                        `${prefix}-menu-item`,
                        {
                            [`${prefix}-menu-item-selected`]:
                                Astro.url.pathname === base + item.path,
                        },
                    ]}
                    style={{ order: getName(item.path) ? 1 : 0 }}
                >
                    <a
                        class={`${prefix}-menu-item-link`}
                        href={base + item.path}
                    >
                        {getName(item.path) || "readme"}
                    </a>
                </li>
            );
        })
    }
</ul>
